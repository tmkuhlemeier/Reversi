using System; using System.Drawing; using System.Drawing.Drawing2D; using System.Drawing.Text; using System.Windows.Forms; using System.Collections.Generic;  namespace Reversi {     public partial class ReversiForm : Form     {         //membervariabelen          Button nieuwspel;         Button help;         Panel Bord;          int aandebeurt = 1;         IList<int> horizontaal, verticaal; // Lists van horizontale en verticale richtingen         int aantalklikhelp;         int waarde; // waarde van coordinaten in veldenkopie         const int breedte = 10, hoogte = 10; // breedte en hoogte van het bord in velden         int[,] velden; // twee-dimensionale aray van het aantal velden, ook wel vakjes of hokjes         int[,] veldenkopie; // een kopie deze array         int blauwestenen, rodestenen;         int aantalpas;         const int diameter = 40, veldgrootte = 50;         int bordbreedte, bordhoogte; // breedte en hoogte van het bordt in beeldpunten         int legevelden;          public ReversiForm()         {             horizontaal = new List<int>();              verticaal = new List<int>();             Brush blauw = Brushes.Blue;
            Brush rood = Brushes.Red;
            bordbreedte = breedte * veldgrootte + 1;             bordhoogte = hoogte * veldgrootte + 1;             velden = new int[breedte, hoogte];             veldenkopie = new int[breedte, hoogte];             plaatsBeginStenen(velden);

            // Client
            this.ClientSize = new Size(bordbreedte + 200, bordhoogte + 300);             this.Text = "Reversi";             this.BackColor = Color.WhiteSmoke;              int schermbreedte = ClientSize.Width;             int scherhoogte = ClientSize.Height;              //knoppen             nieuwspel = new Button             {                 Location = new Point(schermbreedte/2 - 70, 15),                 Size = new Size(70, 30),                 Text = "Nieuw spel",                 BackColor = Color.LightGray              };              help = new Button             {                 Location = new Point(schermbreedte/2, 15),                 Size = new Size(70, 30),                 Text = "Help",                 BackColor = Color.LightGray             };              //panel bord             Bord = new Panel             {                 Location = new Point(100, 200),                 Size = new Size(bordbreedte, bordhoogte),                 BackColor = Color.White             };             Bord.Visible = true;              //event/eventhandlers             this.Paint += TekenScherm;             nieuwspel.Click += Kliknieuwspel;             help.Click += Klikhelp;             Bord.Paint += Tekenbord;             Bord.MouseClick += KlikTekenSteen;              //toevoegen controls aan het form             Controls.Add(nieuwspel);             Controls.Add(help);             Controls.Add(Bord);         }          //bord tekenen         public void Tekenbord(object obj, PaintEventArgs pea)         {             Graphics gr = pea.Graphics;             gr.SmoothingMode =             SmoothingMode.AntiAlias;             Brush blauw = Brushes.Blue;             Brush rood = Brushes.Red;             Brush zwart = Brushes.Black;             //pos betekent positie (van het bord en de velden)             int xpos = 0;             int ypos = 0;             int middenx = breedte/2;             int middeny = hoogte/2;             int steenpositie;             int verschil = diameter / 5;             int minidiameter = diameter - verschil;             steenpositie = (veldgrootte - diameter) / 2;             blauwestenen = 0;             rodestenen = 0;             // hier wordt de kopie van de array bord gereset             verwijderStenen(veldenkopie);             // de array van bordkopie krijgt waarden ( 0 of 3)             plaatsHulpStenen();             berekenHulpStenen(veldenkopie);              //hier worden de velden getekend             for (int x = 0; x < breedte; x++)             {                 for (int y = 0; y < hoogte; y++)
                {
                    if ((x % 2 == 0 && y % 2 == 0) || (x % 2 == 1 && y % 2 == 1))                         gr.FillRectangle(Brushes.SeaGreen, x * veldgrootte, y * veldgrootte, veldgrootte, veldgrootte);                     else                         gr.FillRectangle(Brushes.MediumSeaGreen, x * veldgrootte, y * veldgrootte, veldgrootte, veldgrootte);
                }             }             //toevoeging van zwarte ellipsen aan het bord             if (breedte >= 6 && hoogte >= 6)
            {
                gr.FillEllipse(zwart, (middenx - 2) * veldgrootte - 4, (middeny - 2) * veldgrootte - 4, 8, 8);
                gr.FillEllipse(zwart, (middenx - 2) * veldgrootte - 4, (middeny + 2) * veldgrootte - 4, 8, 8);
                gr.FillEllipse(zwart, (middenx + 2) * veldgrootte - 4, (middeny - 2) * veldgrootte - 4, 8, 8);
                gr.FillEllipse(zwart, (middenx + 2) * veldgrootte - 4, (middeny + 2) * veldgrootte - 4, 8, 8);
            }              //tekenen van de lijnen op het bord             for (int y = 0; y <= hoogte; y++)             {                 gr.DrawLine(Pens.Black, 0, ypos, bordbreedte, ypos);                 ypos = ypos + veldgrootte;             }             for (int x = 0; x <= breedte; x++)             {                 gr.DrawLine(Pens.Black, xpos, 0, xpos, bordhoogte);                 xpos = xpos + veldgrootte;             }

            //hier worden de stenen getekend
            for (int x = 0; x < breedte; x++)             {                 for (int y = 0; y < hoogte; y++)                 {                     int X = x * veldgrootte + steenpositie;
                    int Y = y * veldgrootte + steenpositie;                     int steen = velden[x, y];                      //blauwe stenen                     if (steen == 1)                     {                         gr.FillEllipse(zwart, X, Y, diameter, diameter);                         gr.FillEllipse(blauw, X + verschil / 2, Y + verschil/ 2, minidiameter, minidiameter);                         blauwestenen++;                     }                     //rode stenen                     if (steen == -1)                     {                         gr.FillEllipse(zwart, X, Y, diameter, diameter);                         gr.FillEllipse(rood, X + verschil / 2, Y + verschil / 2, minidiameter, minidiameter);                         rodestenen++;                     }                     //als een steen de waarde 0 heeft betekent dat een leegveld, int legevelden houdt deze bij                     if (steen == 0)                         legevelden++;                     //hulpstenen                     int steenkopie = veldenkopie[x, y];                     if (steenkopie == 3)                         gr.DrawEllipse(Pens.Black, X + verschil / 2, Y + verschil / 2, minidiameter, minidiameter);
                }
            }
            this.Invalidate();         }

        //deze tekent het form
        public void TekenScherm(object o, PaintEventArgs pea)         {             Graphics gr = pea.Graphics;             gr.SmoothingMode =             SmoothingMode.AntiAlias;             gr.TextRenderingHint =             TextRenderingHint.AntiAliasGridFit;             Font font = new Font("Tahoma", 10);             Brush blauw = Brushes.Blue;
            Brush rood = Brushes.Red;             Brush zwart = Brushes.Black;             string kleur = "";             int hulpstenen = berekenHulpStenen(veldenkopie);              //tekenen van elementen op de userinterface             gr.FillEllipse(zwart, 100, 60, 40, 40);             gr.FillEllipse(blauw, 104, 64, 32, 32);             gr.DrawString(blauwestenen + " stenen", font, blauw, 150, 70);             gr.FillEllipse(zwart, 100, 110, 40, 40);             gr.FillEllipse(rood, 104, 114, 32, 32);             gr.DrawString(rodestenen + " stenen", font, rood, 150, 120);             gr.FillRectangle(zwart, 105, 205, bordbreedte, bordhoogte);              //in bepaalde gevallen een bepaalde tekst op de interface schrijven             if (aandebeurt == 1)             {                 kleur = "blauw";             }             else if (aandebeurt == -1)             {                 kleur = "rood";             }              // uitkomst             if (rodestenen == 0)                 gr.DrawString(" blauw wint", font, zwart, 100, 160);             else if (blauwestenen == 0)
                gr.DrawString(" rood wint", font, zwart, 100, 160);              // aanzet             if (aantalpas < 2 && rodestenen != 0 && blauwestenen != 0 && legevelden != 0)                 gr.DrawString(kleur + " is aan zet", font, zwart, 100, 160);              //uitkomst             if (aantalpas == 2 || legevelden == 0)             {                 if (blauwestenen > rodestenen)                     gr.DrawString(" blauw wint", font, zwart, 100, 160);                 else if (rodestenen > blauwestenen)                     gr.DrawString(" rood wint", font, zwart, 100, 160);                 else if (blauwestenen == rodestenen)                     gr.DrawString("remise", font, zwart, 100, 160);             }
        }
    }
}
